#!/bin/bash

# RustDesk Server Port Configuration

# Standard RustDesk server ports
RUSTDESK_SERVER_PORTS=(
    "21115/tcp"    # hbbs - Hub server (registration and heartbeat)
    "21116/tcp"    # hbbs - Hub server (TCP hole punching)
    "21116/udp"    # hbbs - Hub server (UDP hole punching)
    "21117/tcp"    # hbbr - Relay server (data relay)
    "21119/tcp"    # hbbs - Web console (optional)
)

# Port descriptions for documentation
declare -A PORT_DESCRIPTIONS=(
    ["21115"]="Hub Server - Registration and heartbeat"
    ["21116"]="Hub Server - TCP/UDP hole punching"
    ["21117"]="Relay Server - Data relay"
    ["21119"]="Web Console - Management interface (optional)"
)

# Custom port ranges (if needed)
CUSTOM_PORT_RANGES=(
    # Add custom ranges if required
    # "8000-8100/tcp"
)

# Port validation function
validate_ports() {
    local port_conflicts=()
    
    for port_spec in "${RUSTDESK_SERVER_PORTS[@]}"; do
        local port=${port_spec%/*}
        local protocol=${port_spec#*/}
        
        # Check if port is already in use
        if netstat -${protocol}ln 2>/dev/null | grep -q ":${port} "; then
            port_conflicts+=("${port}/${protocol}")
        elif ss -${protocol}ln 2>/dev/null | grep -q ":${port} "; then
            port_conflicts+=("${port}/${protocol}")
        fi
    done
    
    if [[ ${#port_conflicts[@]} -gt 0 ]]; then
        log_warning "Port conflicts detected:"
        for conflict in "${port_conflicts[@]}"; do
            log_warning "  Port ${conflict} is already in use"
        done
        return 1
    fi
    
    return 0
}
